<head>
    <link href="~/css/StyleSheet.css" rel="stylesheet" />
</head>
@{
    ViewData["Title"] = "ToDo";
}
@model List<Todo>
<h4>ToDo List</h4>

<form action="../ToDo/ChangeStatus" method="post" class="table">
    @if (Model.Count != 0)
    {
        <input type="text" id="searchText" onkeyup="searchFunction()" placeholder="Search task description..">
        <table id="todoList"class="table table-striped table-bordered">
            <tr>
                <th>Description</th>
                <th class="underlined" onclick="sortTable(1)">Due Date</th>
                <th class="underlined" onclick="sortTable(2)">Complete</th>
                <th></th>
            </tr>
            @foreach (Todo t in Model)
            {
                <tr>
                    <td>@t.TodoDesc</td>
                    <td id="dateCol">@t.DueDate.Value.ToShortDateString()</td>
                    <td id="completeCol">
                        <div class="switch">
                            @if (t.Complete == true)
                            {
                                <input type="checkbox" name="Complete" value="true" checked disabled />
                                <input type="checkbox" name="Complete" value="false" hidden />
                            }
                            else
                            {
                                <input type="checkbox" name="Complete" value="true" disabled />
                                <input type="checkbox" name="Complete" value="false" hidden />
                            }
                            <a href="../ToDo/ChangeStatus?id=@t.Id&status=@t.Complete"><img src="~/css/ic_menu_edit.png" alt="Edit" /></a>
                        </div>
                        @*<a href="../ToDo/ChangeStatus?id=@t.Id&status=@t.Complete" class="btn btn-sm btn-secondary">Change Status</a>*@                        
                    </td>
                    <td id="deleteCol"><a href="../ToDo/DeleteToDo?Id=@t.Id" onclick="return confirm('Are you sure you want to delete this item?')"><img src="~/css/ic_menu_delete.png" alt="X" /></a></td>
                </tr>
            }
        </table>
    }
    else
    {
        <h5>Your Todo list is currently empty.</h5>
    }
    <p><a href="../ToDo/AddTodo" class="btn btn-primary">Add a Todo item here!</a></p>
</form>
<script>
    function searchFunction() {
        // Declare variables
        var input, filter, table, tr, td, i, txtValue;
        input = document.getElementById("searchText");
        filter = input.value.toUpperCase();
        table = document.getElementById("todoList");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 0; i < tr.length; i++) {
            td = tr[i].getElementsByTagName("td")[0];
            if (td) {
                txtValue = td.textContent || td.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("todoList");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
